snippet c "const { ... } = ..."
const { $1 } = $2${3:;}
endsnippet

snippet ed "export default"
export default $1${2:;}
endsnippet

snippet if "if () {...}"
if ($1) ${2:{$3}}
endsnippet

snippet clr "Console log for reactotron"
console.tron.display({value: $1, name: '${1/\'\s*/"/g} ====> '})${2:;}
endsnippet

snippet cl1 "Console log extended only 1 string"
console.log('$1 ====> ')${2:;}
endsnippet

snippet cl "Console log extended"
console.log('$1 ====> ', $1)${2:;}
endsnippet

snippet cld "Console log with decorated string"
console.log('${1/\'\s*/"/g} ====> ', $1)${2:;}
endsnippet

snippet clj "Console log for JSON output"
console.log('$1 ====> ', JSON.stringify($1, null, 2))${2:;}
endsnippet

snippet clb "Console log for boolean variable"
console.log('$1 ====> ', $1 ? 'true' : 'false')${2:;}
endsnippet

snippet cw "console.warn();"
console.warn($1)${2:;}
endsnippet

snippet ci "console.info();"
console.info($1)${2:;}
endsnippet

snippet timeout "setTimeout function"
setTimeout(() => {
  $2
}, ${1:1})${3:;}
endsnippet

snippet im "import {|} from '';"
import {$1} from '$2'${3:;}
endsnippet

snippet imd "import | from '';"
import $1 from '$2'${3:;}
endsnippet

snippet imR "import ramda"
import R from 'ramda';
endsnippet

snippet imM "import moment"
import moment from 'moment';
endsnippet

snippet is "Import styles from './styles'"
import styles from './styles'${1:;}
endsnippet

snippet iS "Import Styles from './styles'"
import Styles from './styles'${1:;}
endsnippet

snippet try "try/catch"
try {
  $1
} catch (e) {
  ${2:console.log(${3:'Error ====> ', }e)}
}
endsnippet
